{"version":3,"sources":["Search.module.css","App.module.css","AddGallery.module.css","firebase.js","Gallery.js","Search.js","AddGallery.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","getDatabase","dbRef","ref","Gallery","useState","setgalleryArray","useEffect","onValue","snapshot","savedResults","val","newState","id","push","title","key","largeImageURL","console","log","Search","userSearch","setuserSearch","display","setDisplay","image","setImage","addSave","setaddSave","fetchMyData","a","fetch","response","json","apiData","hits","className","styles","browseSection","searchAndSaveContainer","ImageList","sx","width","height","overflowX","cols","rowHeight","listContainer","ImageListItem","searchBar","action","onSubmit","event","preventDefault","inputSearch","type","value","onChange","searchbar","target","submitButton","browseImages","map","picture","searchColumn","src","webformatURL","alt","tags","addButton","onClick","e","item","newArray","handleClick","overflowY","marginRight","marginLeft","variant","gap","srcSet","loading","removeButtonContainer","hideArray","splice","handleRemove","webformartURL","saveButtonContainer","style","imageArray","update","handlePushArray","AddGallery","open","setIsOpen","displayStyle","setdisplaystyle","AddGallerybutton","App","show","setShow","clicked","setClick","pageBackground","Titlepage","welcomeTitle","clickHere","href","to","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.609c4bd6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"browseSection\":\"Search_browseSection__3wXBc\",\"searchBar\":\"Search_searchBar__2_Cgy\",\"submitButton\":\"Search_submitButton__3M1rC\",\"inputSearch\":\"Search_inputSearch__36pBA\",\"browseImages\":\"Search_browseImages__1Jeby\",\"addButton\":\"Search_addButton__5qjq_\",\"searchAndSaveContainer\":\"Search_searchAndSaveContainer__1mKV_\",\"userSelectionContainer\":\"Search_userSelectionContainer__1EumV\",\"imageArrayContainer\":\"Search_imageArrayContainer__3s2tO\",\"removeButtonContainer\":\"Search_removeButtonContainer__1IMuS\",\"saveButtonContainer\":\"Search_saveButtonContainer__1jRUj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"welcomeTitle\":\"App_welcomeTitle__1LXRA\",\"Titlepage\":\"App_Titlepage__2pXUh\",\"clickHere\":\"App_clickHere__3zZfe\",\"pageBackground\":\"App_pageBackground__2L03E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddGallerybutton\":\"AddGallery_AddGallerybutton__2erzF\"};","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBDlE5j01C7l_FQa4gqlrye-TeTYLVEmKA\",\r\n  authDomain: \"bit-gallery.firebaseapp.com\",\r\n  databaseURL: \"https://bit-gallery-default-rtdb.firebaseio.com\",\r\n  projectId: \"bit-gallery\",\r\n  storageBucket: \"bit-gallery.appspot.com\",\r\n  messagingSenderId: \"725472383146\",\r\n  appId: \"1:725472383146:web:65a467083fa64e443e00d3\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst firebase = initializeApp(firebaseConfig);\r\n// exporting all of the firebase data\r\nexport default firebase;","import Search from './Search'\r\nimport {useState, useEffect} from 'react'\r\nimport firebase from './firebase';\r\nimport { getDatabase, ref, onValue, push, set, update, remove} from 'firebase/database';\r\nconst database = getDatabase(firebase)\r\n// database reference. Reference will take in the database variable. This is where the content gets saved\r\nconst dbRef = ref(database)\r\n\r\n\r\n\r\n function Gallery (){\r\n    const [galleryArray, setgalleryArray] = useState([]);\r\n    useEffect(() => {\r\n      onValue(dbRef, (snapshot) =>{\r\n        let savedResults = snapshot.val();\r\n        let newState = [];\r\n        for(let id in savedResults){\r\n          newState.push({\r\n            id:id,\r\n            title:savedResults[id].key[0].largeImageURL,\r\n            // picture: savedResults[key].largeImageURL\r\n          })\r\n        }\r\n        console.log(newState)\r\n        setgalleryArray(newState)\r\n        // console.log(galleryArray)\r\n        // for (let key in savedResults) {\r\n        //    newState.push({\r\n        //    id: key,\r\n        //    movieTitle: savedResults[key].movieTitle,\r\n        //    gif: savedResults[key].gifs\r\n        //    });\r\n        // }\r\n      })\r\n      }, [])\r\n    return(\r\n        <div>\r\n            <h2>Hello!</h2>\r\n            {/* {galleryArray.map(item => <div key={item.id}> <img src={item.webformatURL} alt={item.tags} /> </div>)} */}\r\n        </div>\r\n    )\r\n }\r\n\r\nexport default Gallery;\r\n","import { useState, useEffect } from 'react';\r\nimport firebase from './firebase';\r\nimport * as React from 'react';\r\nimport Gallery from './Gallery'\r\n// whenever there is a change in database or react app then onValue will be able to see it \r\n// push will add new data to the database and set is used to add new data or overwrite data\r\nimport { getDatabase, ref, onValue, push, set, update, remove} from 'firebase/database'; \r\nimport styles from './Search.module.css'\r\nimport ImageList from '@mui/material/ImageList';\r\nimport ImageListItem from '@mui/material/ImageListItem';\r\n\r\n\r\nconst database = getDatabase(firebase)\r\n// database reference. Reference will take in the database variable. This is where the content gets saved\r\nconst dbRef = ref(database)\r\n\r\n\r\nfunction Search() {\r\n  const [userSearch, setuserSearch] = useState('');\r\n  const [display, setDisplay] = useState([]);\r\n  const [image, setImage] = useState([]);\r\n  const [addSave, setaddSave] = useState(\"none\");\r\n\r\n\r\n  const handleChange = (event) => {\r\n  const searchbar = event.target.value;\r\n    setuserSearch(searchbar);\r\n  }\r\n\r\n  async function fetchMyData() {\r\n    try {\r\n      const response = await fetch(`https://pixabay.com/api/?key=24209290-03bf893fb9927a610f46fb041&q=${userSearch}&image_type=photo`);\r\n      const apiData = await response.json();\r\n      setDisplay(apiData.hits)\r\n    } catch(error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n// everytime the page refreshes it shows something\r\n  useEffect(() => {\r\n    if(userSearch){\r\n      fetchMyData();\r\n    } else{\r\n      return null;\r\n    }\r\n    \r\n  }, [])\r\n\r\n\r\n  const handleSubmit = (event) =>{\r\n    event.preventDefault();\r\n    fetchMyData();\r\n    setuserSearch(\"\");\r\n  }\r\n\r\n\r\n  const handleClick = (e, item) => {\r\n    e.preventDefault();\r\n    const newArray = [...image, item];\r\n    setImage(newArray);\r\n    setaddSave(\"\");\r\n  }\r\n\r\nconst handleRemove = (e, item) =>{\r\n  const hideArray = [...image]\r\n  hideArray.splice(item, 1)\r\n  setImage(hideArray)\r\n\r\n}\r\n\r\nconst handlePushArray = (e, item) =>{\r\n  const imageArray = image;\r\n  update(dbRef, {\r\n    key: imageArray\r\n  })\r\n  const resetImage = [];\r\n   push(dbRef, {\r\n    key: imageArray\r\n  })\r\n  setImage(resetImage);\r\n  setaddSave(\"none\");\r\n\r\n}\r\n\r\n\r\n  return (\r\n    \r\n    <div className={styles.browseSection}>\r\n      <div className={styles.searchAndSaveContainer}>\r\n        <ImageList sx={{ width: 450, height: 900, overflowX: 'hidden'}} cols={3} rowHeight={164} className={styles.listContainer}>\r\n                <ImageListItem>\r\n                    <div className={styles.searchBar}>\r\n                        <form action=\"#\" onSubmit={handleSubmit}>\r\n                        <input className={styles.inputSearch} type= \"text\" value={userSearch} onChange={handleChange}/>\r\n                        <input className={styles.submitButton}type=\"submit\" value=\"submit\" />\r\n                        </form>\r\n                    </div>\r\n                    <div className={styles.browseImages}>\r\n                        {display.map(picture => <div className={styles.searchColumn} key={picture.id}> <img src={picture.webformatURL} alt={picture.tags}></img><div className={styles.addButton}><button onClick={(e) => handleClick(e,picture)}>Add</button>\r\n                        </div>\r\n                    </div>)}\r\n                  </div>\r\n          </ImageListItem>\r\n        </ImageList>\r\n        <ImageList sx={{ width: '100vw' , height: '100vh', overflowY: 'inherit', marginRight: '40px', marginLeft: '20px'}} variant=\"woven\" cols={3} gap={8}>\r\n        {image.map((picture) => (\r\n          <ImageListItem key={picture.webformartURL} sx={{height: '40vh', overflowY: 'none'}} >\r\n            <img\r\n              src={`${picture.webformatURL}`}\r\n              srcSet={`${picture.webformatURL}`}\r\n              alt={picture.tags}\r\n              loading=\"lazy\"\r\n            />\r\n            <div className={styles.removeButtonContainer}>\r\n            <button onClick={(e) => handleRemove(e,picture)}>Remove</button>\r\n            </div>\r\n          </ImageListItem>\r\n        ))}\r\n      </ImageList>\r\n      </div>\r\n      <div className={styles.saveButtonContainer}>\r\n        <button style={{display: addSave}}onClick={(e) => handlePushArray(e,image)}>Save</button>\r\n      </div>\r\n      <div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;","import Search from './Search';\r\nimport {useState} from 'react';\r\nimport styles from './AddGallery.module.css'\r\n// const database = getDatabase(firebase)\r\n// database reference. Reference will take in the database variable. This is where the content gets saved\r\n// const dbRef = ref(database)\r\n\r\n\r\nfunction AddGallery(){\r\nconst [open, setIsOpen] = useState(false);\r\nconst [displayStyle, setdisplaystyle] = useState(\"\")\r\n\r\nconst handleClick = () =>{\r\n    setIsOpen(!open);\r\n    setdisplaystyle(\"none\");\r\n}\r\n\r\n\r\n    return(\r\n        <>\r\n        {open ? <Search /> : null}\r\n        <button className={styles.AddGallerybutton} onClick={handleClick} style={{display: displayStyle}}> New Gallery</button>\r\n        {/* <button style={{display: displayStyle}}onClick={handleClick} > Add Gallery</button> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddGallery;","import './App.css';\nimport AddGallery from './AddGallery';\nimport Gallery from './Gallery';\nimport { useState, useEffect } from 'react'\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Link,\n  Route\n} from 'react-router-dom'\n\nimport styles from './App.module.css'\nimport * as React from 'react';\nimport { Paper, Box, Button } from '@mui/material';\n\nfunction App() {\n  const [show, setShow] = useState(\"inline\");\n  const [clicked, setClick] = useState(false);\n\nconst handleDisplay = () =>{\n    setClick(!clicked);\n    setShow(\"none\");\n}\n\n\n\n\n  \n\n\n  return (\n\n      // <Route exact path = '/gallery' element={<Gallery />}/>\n    <Router>\n    <div className={styles.pageBackground}>\n      <div>\n        <section className={styles.Titlepage} style={{display: show}}>\n                <h1 className={styles.welcomeTitle}>Welcome to Bit Gallery!</h1>\n                <p>You can use this website to create a small gallery! </p>\n                <button className={styles.clickHere} onClick={handleDisplay}>Click here to start</button>\n        </section>\n      </div>\n      <div>\n    </div>\n        <main>\n        {clicked ? (\n\n        <div>\n          <h1>Bit Gallery</h1>\n          <header>\n            <nav>\n                <ul>\n                  <li>\n                    <a href>Home</a>\n                  </li>\n                  <li>\n                    <Link to=\"/gallery\">Gallery</Link>\n                    <Routes>\n                    <Route path='/gallery' element={<Gallery />}/>\n                    </Routes>\n                  </li>\n                  </ul>\n              </nav>   \n             </header>\n             <section>\n              <AddGallery />\n            </section>\n         </div>\n\n        ) : null}\n       \n        </main> \n      </div>\n      </Router>\n  );\n}\n\nexport default App;\n\n// {/* <nav>\n// <ul>\n//   <li>\n//     <Link to=\"/\">Home</Link>\n//   </li>\n//   <li>\n//       {/* <Link to=\"/gallery\">Gallery</Link> */}\n//     <Link to=\"/addImage\">AddImage</Link>\n//   </li>\n//   <li>\n//     <Link to=\"/gallery\">Gallery</Link>\n//       {/* <Link to=\"/addImage\">AddImage</Link> */}\n//   </li>\n// </ul>\n// </nav>\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}