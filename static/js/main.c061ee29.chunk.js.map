{"version":3,"sources":["Search.module.css","Homepage.module.css","App.module.css","firebase.js","Nav.js","Search.js","Gallery.js","Homepage.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Nav","to","database","getDatabase","dbRef","ref","Search","useState","userSearch","setuserSearch","display","setDisplay","image","setImage","addSave","setaddSave","fetchMyData","a","fetch","response","json","apiData","hits","console","log","useEffect","className","styles","browseSection","searchAndSaveContainer","ImageList","sx","width","height","overflowX","cols","rowHeight","listContainer","ImageListItem","searchBar","action","onSubmit","event","preventDefault","inputSearch","type","value","onChange","searchbar","target","submitButton","browseImages","map","picture","searchColumn","src","webformatURL","alt","tags","addButton","onClick","e","item","newArray","handleClick","id","overflowY","marginRight","marginLeft","variant","gap","srcSet","loading","removeButtonContainer","index","hideArray","splice","handleRemove","webformartURL","saveButtonContainer","style","imageArray","update","key","push","handlePushArray","Gallery","onValue","snapshot","Homepage","homepageContainer","Titlepage","welcomeTitle","clickHere","App","pageBackground","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c061ee29.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"browseSection\":\"Search_browseSection__3wXBc\",\"searchBar\":\"Search_searchBar__2_Cgy\",\"submitButton\":\"Search_submitButton__3M1rC\",\"inputSearch\":\"Search_inputSearch__36pBA\",\"browseImages\":\"Search_browseImages__1Jeby\",\"addButton\":\"Search_addButton__5qjq_\",\"searchAndSaveContainer\":\"Search_searchAndSaveContainer__1mKV_\",\"userSelectionContainer\":\"Search_userSelectionContainer__1EumV\",\"imageArrayContainer\":\"Search_imageArrayContainer__3s2tO\",\"removeButtonContainer\":\"Search_removeButtonContainer__1IMuS\",\"saveButtonContainer\":\"Search_saveButtonContainer__1jRUj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"homepageContainer\":\"Homepage_homepageContainer__287CR\",\"Titlepage\":\"Homepage_Titlepage__2eXU_\",\"clickHere\":\"Homepage_clickHere__JjCTh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageBackground\":\"App_pageBackground__2L03E\"};","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBDlE5j01C7l_FQa4gqlrye-TeTYLVEmKA\",\r\n  authDomain: \"bit-gallery.firebaseapp.com\",\r\n  databaseURL: \"https://bit-gallery-default-rtdb.firebaseio.com\",\r\n  projectId: \"bit-gallery\",\r\n  storageBucket: \"bit-gallery.appspot.com\",\r\n  messagingSenderId: \"725472383146\",\r\n  appId: \"1:725472383146:web:65a467083fa64e443e00d3\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst firebase = initializeApp(firebaseConfig);\r\n// exporting all of the firebase data\r\nexport default firebase;","import {useState} from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Routes,\r\n    Link,\r\n    Route\r\n  } from 'react-router-dom';\r\n\r\nimport styles from './Nav.module.css'\r\n\r\nfunction Nav(){\r\n    return(\r\n        <main>\r\n          <div>\r\n            <h1>Bit Gallery</h1>\r\n            <header>\r\n              <nav>\r\n                  <ul>\r\n                    <li>\r\n                    <Link to=\"/\">Home</Link>\r\n                    </li>\r\n                    <li>\r\n                      <Link to=\"/gallery\">Gallery</Link>\r\n                    </li>\r\n                    </ul>\r\n                </nav>   \r\n              </header>\r\n          </div>\r\n         </main> \r\n    )\r\n}\r\n\r\nexport default Nav;","import { useState, useEffect } from 'react';\r\nimport firebase from './firebase';\r\nimport * as React from 'react';\r\nimport Gallery from './Gallery'\r\n// whenever there is a change in database or react app then onValue will be able to see it \r\n// push will add new data to the database and set is used to add new data or overwrite data\r\nimport { getDatabase, ref, onValue, push, set, update, remove} from 'firebase/database'; \r\nimport styles from './Search.module.css'\r\nimport ImageList from '@mui/material/ImageList';\r\nimport ImageListItem from '@mui/material/ImageListItem';\r\nimport Nav from './Nav'\r\n\r\n\r\nconst database = getDatabase(firebase)\r\n// database reference. Reference will take in the database variable. This is where the content gets saved\r\nconst dbRef = ref(database)\r\n\r\n\r\nfunction Search() {\r\n  const [userSearch, setuserSearch] = useState('');\r\n  const [display, setDisplay] = useState([]);\r\n  const [image, setImage] = useState([]);\r\n  const [addSave, setaddSave] = useState(\"none\");\r\n\r\n\r\n  const handleChange = (event) => {\r\n  const searchbar = event.target.value;\r\n    setuserSearch(searchbar);\r\n  }\r\n\r\n  async function fetchMyData() {\r\n    try {\r\n      const response = await fetch(`https://pixabay.com/api/?key=24209290-03bf893fb9927a610f46fb041&q=${userSearch}&image_type=photo`);\r\n      const apiData = await response.json();\r\n      setDisplay(apiData.hits)\r\n    } catch(error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(userSearch){\r\n      fetchMyData();\r\n    } else{\r\n      return null;\r\n    }\r\n    \r\n  }, [])\r\n\r\n\r\n  const handleSubmit = (event) =>{\r\n    event.preventDefault();\r\n    fetchMyData();\r\n    setuserSearch(\"\");\r\n  }\r\n\r\n\r\n  const handleClick = (e, item) => {\r\n    e.preventDefault();\r\n    const newArray = [...image, item];\r\n    setImage(newArray);\r\n    setaddSave(\"\");\r\n  }\r\n\r\n  const handleRemove = (e, index) =>{\r\n    const hideArray = image\r\n    hideArray.splice(index, 1)\r\n    setImage(hideArray)\r\n  }\r\n\r\n  const handlePushArray = (e, item) =>{\r\n    const imageArray = image;\r\n    update(dbRef, {\r\n      key: imageArray\r\n    })\r\n    const resetImage = [];\r\n    push(dbRef, {\r\n      key: imageArray\r\n    })\r\n    setImage(resetImage);\r\n    setaddSave(\"none\");\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div><Nav/ ></div>\r\n      <div className={styles.browseSection}>\r\n        <div className={styles.searchAndSaveContainer}>\r\n          <ImageList sx={{ width: 450, height: 900, overflowX: 'hidden'}} cols={3} rowHeight={164} className={styles.listContainer}>\r\n                  <ImageListItem>\r\n                      <div className={styles.searchBar}>\r\n                          <form action=\"#\" onSubmit={handleSubmit}>\r\n                          <input className={styles.inputSearch} type= \"text\" value={userSearch} onChange={handleChange}/>\r\n                          <input className={styles.submitButton}type=\"submit\" value=\"submit\" />\r\n                          </form>\r\n                      </div>\r\n                      <div className={styles.browseImages}>\r\n                          {display.map(picture => <div className={styles.searchColumn} key={picture.id}> <img src={picture.webformatURL} alt={picture.tags}></img><div className={styles.addButton}><button onClick={(e) => handleClick(e,picture)}>Add</button>\r\n                          </div>\r\n                      </div>)}\r\n                    </div>\r\n                  </ImageListItem>\r\n          </ImageList>\r\n          <ImageList sx={{ width: '100vw' , height: '100vh', overflowY: 'inherit', marginRight: '40px', marginLeft: '20px'}} variant=\"woven\" cols={3} gap={8}>\r\n          {image.map((picture) => (\r\n            <ImageListItem key={picture.webformartURL} sx={{height: '40vh', overflowY: 'none'}} >\r\n              <img\r\n                src={`${picture.webformatURL}`}\r\n                srcSet={`${picture.webformatURL}`}\r\n                alt={picture.tags}\r\n                loading=\"lazy\"\r\n              />\r\n              <div className={styles.removeButtonContainer}>\r\n              <button onClick={(e) => handleRemove(e,picture)}>Remove</button>\r\n              </div>\r\n            </ImageListItem>\r\n            ))}\r\n          </ImageList>\r\n        </div>\r\n        <div className={styles.saveButtonContainer}>\r\n          <button style={{display: addSave}}onClick={(e) => handlePushArray(e,image)}>Save</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;","import Search from './Search'\r\nimport {useState, useEffect} from 'react'\r\nimport firebase from './firebase';\r\nimport { getDatabase, ref, onValue, push, set, update, remove} from 'firebase/database';\r\nimport Nav from './Nav'\r\nconst database = getDatabase(firebase)\r\n// database reference. Reference will take in the database variable. This is where the content gets saved\r\nconst dbRef = ref(database)\r\n\r\n\r\n\r\n\r\n function Gallery (){\r\n    const [galleryArray, setgalleryArray] = useState([]);\r\n    useEffect(() => {\r\n      onValue(dbRef, (snapshot) =>{\r\n        // let savedResults = snapshot.val();\r\n        // let newState = [];\r\n        // for(let [key,value] of Object.entries(savedResults)){\r\n\r\n        //  newState.push({\r\n        //   id:key,\r\n        //   picture: value.key.collections\r\n        //   })\r\n        // }\r\n        // console.log(savedResults.key[0].largeImageURL)\r\n        \r\n        // setgalleryArray(savedResults.key[0].largeImageURL)\r\n        // console.log(galleryArray)\r\n        // for (let key in savedResults) {\r\n        //    newState.push({\r\n        //    id: key,\r\n        //    movieTitle: savedResults[key].movieTitle,\r\n        //    gif: savedResults[key].gifs\r\n        //    });\r\n        // }\r\n      })\r\n      }, [])\r\n    return(\r\n        <div>\r\n          <Nav />\r\n            <h2>Hello!</h2>\r\n            {/* {galleryArray.map(item => <div> <img src={item} /> </div>)} */}\r\n        </div>\r\n    )\r\n }\r\n\r\nexport default Gallery;\r\n","import {useState} from 'react'\r\nimport styles from './Homepage.module.css'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Routes,\r\n    Link,\r\n    Route\r\n  } from 'react-router-dom'\r\n\r\n\r\nfunction Homepage (){\r\n\r\n\r\n    return(\r\n        <div className={styles.homepageContainer}>\r\n          <section className={styles.Titlepage} >\r\n                  <h1 className={styles.welcomeTitle}>Welcome to Bit Gallery</h1>\r\n                  <p>You can use this website to create a small gallery </p>\r\n                  <Link to=\"/search\" className={styles.clickHere}>Click here to start</Link>\r\n          </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Homepage;","import './App.css';\nimport Gallery from './Gallery';\nimport { useState, useEffect } from 'react'\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Link,\n  Route\n} from 'react-router-dom'\n\nimport Homepage from './Homepage'\n\nimport styles from './App.module.css'\nimport Search from './Search'\nimport * as React from 'react';\n\nfunction App() {\n  const [show, setShow] = useState(\"inline\");\n  const [clicked, setClick] = useState(false);\n\nconst handleDisplay = () =>{\n    setClick(!clicked);\n    setShow(\"none\");\n}\n\n  return (\n    <Router>\n      <Homepage />\n      <div className={styles.pageBackground}>\n      <Routes>\n        <Route path='/' element={<Homepage />}/>\n        <Route path='/search' element={<Search />}/>\n        <Route path='/gallery' element={<Gallery />}/>\n      </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}